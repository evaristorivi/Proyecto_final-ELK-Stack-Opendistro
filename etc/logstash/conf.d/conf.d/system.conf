filter {
  if [fileset][module] == "system" {
    

    if [fileset][name] == "auth" {
      mutate {
        add_field => { "src_ip" => "%{[@metadata][ip_address]}" }
      }
      grok {
        match => { "message" => ["%{SYSLOGTIMESTAMP:[system][auth][timestamp]} %{SYSLOGHOST:[system][auth][hostname]} sshd(?:\[%{POSINT:[system][auth][pid]}\])?: %{DATA:[system][auth][ssh][event]} %{DATA:[system][auth][ssh][method]} for (invalid user )?%{DATA:[system][auth][user]} from %{IPORHOST:[system][auth][ssh][ip]} port %{NUMBER:[system][auth][ssh][port]} ssh2(: %{GREEDYDATA:[system][auth][ssh][signature]})?",
                  "%{SYSLOGTIMESTAMP:[system][auth][timestamp]} %{SYSLOGHOST:[system][auth][hostname]} sshd(?:\[%{POSINT:[system][auth][pid]}\])?: %{DATA:[system][auth][ssh][event]} user %{DATA:[system][auth][user]} from %{IPORHOST:[system][auth][ssh][ip]}",
                  "%{SYSLOGTIMESTAMP} %{SYSLOGHOST} systemd: pam_unix\(systemd-user:session\): session %{WORD:estado} for user %{USERNAME:username} by \(uid=%{INT:uid:int}\)",
                  "%{SYSLOGTIMESTAMP} %{SYSLOGHOST} login\[%{POSINT:[system][auth][pid]}]: pam_unix\(login:session\): session %{WORD:estado} for user %{USERNAME:username}",                  
                  "%{SYSLOGTIMESTAMP:[system][auth][timestamp]} %{SYSLOGHOST:[system][auth][hostname]} sshd(?:\[%{POSINT:[system][auth][pid]}\])?: Did not receive identification string from %{IPORHOST:[system][auth][ssh][dropped_ip]}",
                  "%{SYSLOGTIMESTAMP:[system][auth][timestamp]} %{SYSLOGHOST:[system][auth][hostname]} sudo(?:\[%{POSINT:[system][auth][pid]}\])?: \s*%{DATA:[system][auth][user]} :( %{DATA:[system][auth][sudo][error]} ;)? TTY=%{DATA:[system][auth][sudo][tty]} ; PWD=%{DATA:[system][auth][sudo][pwd]} ; USER=%{DATA:[system][auth][sudo][user]} ; COMMAND=%{GREEDYDATA:[system][auth][sudo][command]}",
                  "%{SYSLOGTIMESTAMP:[system][auth][timestamp]} %{SYSLOGHOST:[system][auth][hostname]} groupadd(?:\[%{POSINT:[system][auth][pid]}\])?: new group: name=%{DATA:system.auth.groupadd.name}, GID=%{NUMBER:system.auth.groupadd.gid}",
                  "%{SYSLOGTIMESTAMP:[system][auth][timestamp]} %{SYSLOGHOST:[system][auth][hostname]} useradd(?:\[%{POSINT:[system][auth][pid]}\])?: new user: name=%{DATA:[system][auth][user][add][name]}, UID=%{NUMBER:[system][auth][user][add][uid]}, GID=%{NUMBER:[system][auth][user][add][gid]}, home=%{DATA:[system][auth][user][add][home]}, shell=%{DATA:[system][auth][user][add][shell]}$",
                  "%{SYSLOGTIMESTAMP:[system][auth][timestamp]} %{SYSLOGHOST:[system][auth][hostname]} %{DATA:[system][auth][program]}(?:\[%{POSINT:[system][auth][pid]}\])?: %{GREEDYMULTILINE:[system][auth][message]}"] }
        pattern_definitions => {
          "GREEDYMULTILINE"=> "(.|\n)*"
        }
        #remove_field => "message"
      }
      date {
        match => [ "[system][auth][timestamp]", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
      }
      geoip {
        source => "[system][auth][ssh][ip]"
        target => "[system][auth][ssh][geoip]"
      }
    }
    else if [fileset][name] == "syslog" {
      mutate {
        add_field => { "src_ip" => "%{[@metadata][ip_address]}" }
      }
      grok {
        match => { "message" => ["%{SYSLOGTIMESTAMP:[system][syslog][timestamp]} %{SYSLOGHOST:[system][syslog][hostname]} %{DATA:[system][syslog][program]}(?:\[%{POSINT:[system][syslog][pid]}\])?: %{GREEDYMULTILINE:[system][syslog][message]}"] }
        pattern_definitions => { "GREEDYMULTILINE" => "(.|\n)*" }
        #remove_field => "message"
      }
      date {
        match => [ "[system][syslog][timestamp]", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
      }
    }

  }



        grok {
            match => [ "message", "%{SYSLOGBASE} (?:(?:<= (?:b|m)db_%{DATA:index_error_filter_type}_candidates: \(%{WORD:index_error_attribute_name}\) not indexed)|(?:ppolicy_%{DATA:ppolicy_op}: %{DATA:ppolicy_data})|(?:connection_input: conn=%{INT:connection} deferring operation: %{DATA:deferring_op})|(?:connection_read\(%{INT:fd_number}\): no connection!)|(?:conn=%{INT:connection} (?:(?:fd=%{INT:fd_number} (?:(?:closed(?: \(connection lost\)|))|(?:ACCEPT from IP=%{IP:src_ip}\:%{INT:src_port} \(IP=%{IP:dst_ip}\:%{INT:dst_port}\))|(?:TLS established tls_ssf=%{INT:tls_ssf} ssf=%{INT:ssf})))|(?:op=%{INT:operation_number} (?:(?:(?:(?:SEARCH )|(?:))RESULT (?:tag=%{INT:tag}|oid=(?:%{DATA:oid}(?:))) err=%{INT:error_code}(?:(?: nentries=%{INT:nentries})|(?:)) text=(?:(?:%{DATA:error_text})|(?:)))|(?:%{WORD:operation_name}(?:(?: %{DATA:data})|(?:))))))))%{SPACE}$" ]
            add_tag => ["openldap"]
        }
        
        date {
            locale => "en"
            match => [ "timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
            target => "@timestamp"
        }
        if [operation_name] == "BIND" {
            grok {
            match => [ "data", "(?:(?:(?<bind_dn>anonymous))|(?:dn=\"%{DATA:bind_dn}\")) (?:(?:method=%{WORD:bind_method})|(?:mech=%{WORD:bind_mech} ssf=%{INT:bind_ssf}))%{SPACE}$" ]
            remove_field => [ "data" ]
            }
        }
        if [operation_name] == "SRCH" {
            grok {
            match => [ "data", "(?:(?:base=\"%{DATA:search_base}\" scope=%{INT:search_scope} deref=%{INT:search_deref} filter=\"%{DATA:search_filter}\")|(?:attr=%{DATA:search_attr}))%{SPACE}$" ]
            remove_field => [ "data" ]
            }
        }
        if [operation_name] == "MOD" {
            grok {
            match => [ "data", "(?:(?:dn=\"%{DATA:mod_dn}\")|(?:attr=%{DATA:mod_attr}))%{SPACE}$" ]
            remove_field => [ "data" ]
            }
        }
        if [operation_name] == "MODRDN" {
            grok {
            match => [ "data", "dn=\"%{DATA:modrdn_dn}\"%{SPACE}$" ]
            remove_field => [ "data" ]
            }
        }
        if [operation_name] == "ADD" {
            grok {
            match => [ "data", "dn=\"%{DATA:add_dn}\"%{SPACE}$" ]
            remove_field => [ "data" ]
            }
        }
        if [operation_name] == "DEL" {
            grok {
            match => [ "data", "dn=\"%{DATA:del_dn}\"%{SPACE}$" ]
            remove_field => [ "data" ]
            }
        }
        if [operation_name] == "CMP" {
            grok {
            match => [ "data", "dn=\"%{DATA:cmp_dn}\" attr=\"%{DATA:cmp_attr}\"%{SPACE}$" ]
            remove_field => [ "data" ]
            }
        }
        if [operation_name] == "EXT" {
            grok {
            match => [ "data", "oid=%{DATA:ext_oid}%{SPACE}$" ]
            remove_field => [ "data" ]
            }
        }
        if [ppolicy_op] == "bind" {
            grok {
            match => [ "ppolicy_data", "(?:(?:Entry %{DATA:ppolicy_bind_dn} has an expired password: %{INT:ppolicy_grace} grace logins)|(?:Setting warning for password expiry for %{DATA:ppolicy_bind_dn} = %{INT:ppolicy_expiration} seconds))%{SPACE}$" ]
            remove_field => [ "ppolicy_data" ]
            }
        }



 
    if  [src_ip] =~ /^192\.168\.3\.([1-9]|[1-9][0-9]|1(0[0-9]|1[0-6]))$/ {
       mutate {
         add_field => { "aula" => "ICO1" }
         add_field => { "tipo_equipo" => "PC de aula" }
       }
    }
    if  [src_ip] =~ /^192\.168\.3\.(1(1[7-9]|[2-9][0-9])|2([0-4][0-9]|5[0-4]))$/ {
       mutate {
         add_field => { "aula" => "ICO1" }
         add_field => { "tipo_equipo" => "Laptop o MV" }
       }
    }

    if  [src_ip] =~ /^192\.168\.2\.([1-9]|[1-9][0-9]|1(0[0-9]|1[0-6]))$/ {
       mutate {
         add_field => { "aula" => "ICO2" }
         add_field => { "tipo_equipo" => "PC de aula" }
       }
    }
    if  [src_ip] =~ /^192\.168\.2\.(1(1[7-9]|[2-9][0-9])|2([0-4][0-9]|5[0-4]))$/ {
       mutate {
         add_field => { "aula" => "ICO2" }
         add_field => { "tipo_equipo" => "Laptop o MV" }
       }
    }
 

    if  [src_ip] =~ /^192\.168\.1\.([1-9]|[1-9][0-9]|1(0[0-9]|1[0-6]))$/ {
       mutate {
         add_field => { "aula" => "ICO3" }
         add_field => { "tipo_equipo" => "PC de aula" }
       }
    }
    if  [src_ip] =~ /^192\.168\.1\.(1(1[7-9]|[2-9][0-9])|2([0-4][0-9]|5[0-4]))$/ {
       mutate {
         add_field => { "aula" => "ICO3" }
         add_field => { "tipo_equipo" => "Laptop o MV" }
       }
    }

    if  [src_ip] =~ /^192\.168\.0\.([1-9]|[1-9][0-9]|1(0[0-9]|1[0-6]))$/ {
       mutate {
         add_field => { "aula" => "ICO4" }
         add_field => { "tipo_equipo" => "PC de aula" }
       }
    }
    if  [src_ip] =~ /^192\.168\.0\.(1(1[7-9]|[2-9][0-9])|2([0-4][0-9]|5[0-4]))$/ {
       mutate {
         add_field => { "aula" => "ICO4" }
         add_field => { "tipo_equipo" => "Laptop o MV" }
       }
    }
 

     


}
